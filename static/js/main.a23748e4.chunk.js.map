{"version":3,"sources":["components/Holiday.js","components/Section.js","App.js","reportWebVitals.js","index.js"],"names":["Holiday","s","holiday","className","motivo","dia","mes","tipo","toUpperCase","slice","Section","holidays","title","useState","show","setShow","onClick","map","h","App","setHolidays","date","Date","getFullYear","fetchHolidays","a","fetch","api","console","log","status","statusText","json","getHolidaysFromLocalStorage","holidaysLocal","JSON","parse","localStorage","getItem","Object","keys","length","fetchedHolidays","setItem","stringify","useEffect","then","value","filter","now","today","getDate","getMonth","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAeeA,EAbC,SAAC,GAAe,IACRC,EADNC,EAAa,EAAbA,QAId,OACI,sBAAKC,UAAW,0DAAhB,UACI,4BAAID,EAAQE,SACZ,8BAAIF,EAAQG,IAAZ,IAAkBH,EAAQI,OAC1B,6BAPYL,EAOGC,EAAQK,KANpBN,EAAE,GAAGO,cAAgBP,EAAEQ,MAAM,UCmB7BC,EApBC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MACxB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKZ,UAAW,iDAAhB,UACI,qBAAKa,QAAS,kBAAMD,GAASD,IACxBX,UAAW,qFADhB,SAEI,4BAAIS,MAIJE,GAAQH,GACR,qBAAKR,UAAW,kDAAhB,SACKQ,EAASM,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAShB,QAASgB,aCuD1CC,MAhEf,WACI,MAAgCN,mBAAS,IAAzC,mBAAOF,EAAP,KAAiBS,EAAjB,KACMC,GAAO,IAAIC,MAAOC,cAFb,SAIIC,IAJJ,2EAIX,4BAAAC,EAAA,+EAE0BC,MAAM,+CAAD,OAAgDL,IAF/E,cAEcM,EAFd,OAGQC,QAAQC,IAAI,iBAAkBF,EAAIG,OAAQH,EAAII,YAHtD,SAIqBJ,EAAIK,OAJzB,0EAMQJ,QAAQC,IAAR,MANR,2DAJW,+BAuBII,IAvBJ,2EAuBX,8BAAAR,EAAA,yDAG0B,QADlBS,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,eACgB,IAAtCC,OAAOC,KAAKN,GAAeO,OAH7D,gCAIoCjB,IAJpC,cAIYkB,EAJZ,OAKQL,aAAaM,QAAQ,WAAYR,KAAKS,UAAUF,IALxD,kBAMeA,GANf,gCAQWR,GARX,4CAvBW,sBAkCXW,qBAAU,WAAM,4CACZ,sBAAApB,EAAA,+EACWQ,KADX,4CADY,uBAAC,WAAD,gCAIZI,GAAeS,MAAK,SAAAC,GAChB3B,EAAY2B,QAEjB,IAEH,IAAInC,EAAK,mBAAeS,GACxB,OACI,sBAAKlB,UAAW,UAAhB,UACI,oBAAIA,UAAW,oCAAf,SAAqDS,IACrD,cAAC,EAAD,CAASA,MAAO,oBACPD,SAAUA,EAASqC,QAlCpC,SAA+B9C,GAC3B,IAAM+C,EAAM,IAAI3B,KACV4B,EACGD,EAAIE,UADPD,EAEKD,EAAIG,WAAa,EAE5B,OAAQlD,EAAQI,MAAQ4C,GAAehD,EAAQG,IAAM6C,GAAchD,EAAQI,IAAM4C,OA6B7E,cAAC,EAAD,CAAStC,MAAOA,EACPD,SAAUA,IACnB,sBAAKR,UAAW,uDAAhB,sBACa,mBAAGA,UAAW,kBAAmBkD,KAAK,qCAAtC,0BADb,WAEU,mBAAGlD,UAAW,kBACXkD,KAAK,0CADR,mCAFV,YAG8F,mBAC1FlD,UAAW,kBACXkD,KAAK,8BAFqF,6BChD3FC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a23748e4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Holiday = ({holiday}) => {\n    const capitalize = (s) => {\n        return s[0].toUpperCase() + s.slice(1);\n    }\n    return (\n        <div className={\"bg-purple-500 m-2 p-4 shadow-md shadow-inner rounded-lg\"}>\n            <p>{holiday.motivo}</p>\n            <p>{holiday.dia}/{holiday.mes}</p>\n            <p>{capitalize(holiday.tipo)}</p>\n        </div>\n    );\n};\n\nexport default Holiday;\n","import React, {useState} from 'react';\nimport Holiday from \"./Holiday\";\n\nconst Section = ({holidays, title}) => {\n    const [show, setShow] = useState(false);\n    return (\n        <div className={\"text-white font-bold grid-cols-1 w-1/2 mx-auto\"}>\n            <div onClick={() => setShow(!show)}\n                 className={\"cursor-pointer bg-yellow-600 mx-auto p-2 m-2 rounded-lg h-full hover:bg-yellow-500\"}>\n                <p>{title}</p>\n            </div>\n            {/*TODO: Por qu√© holidays.holidays?*/}\n            {\n                show && holidays &&\n                <div className={\"mx-auto m-2 p-2 bg-purple-800 rounded-lg h-full\"}>\n                    {holidays.map(h => <Holiday holiday={h}/>)}\n                </div>\n            }\n\n        </div>\n    );\n};\n\nexport default Section;\n","import './App.css';\nimport './index.css';\nimport {useEffect, useState} from \"react\";\nimport Section from \"./components/Section\";\n\n\nfunction App() {\n    const [holidays, setHolidays] = useState([]);\n    const date = new Date().getFullYear()\n\n    async function fetchHolidays() {\n        try {\n            const api = await fetch(`https://nolaborables.com.ar/api/v2/feriados/${date}`);\n            console.log(\"API Response: \", api.status, api.statusText)\n            return await api.json();\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    function filterUpcomingHoliday(holiday) {\n        const now = new Date();\n        const today = {\n            day: now.getDate(),\n            month: now.getMonth() + 1\n        };\n        return (holiday.mes === today.month && holiday.dia > today.day) || holiday.mes > today.month;\n    }\n\n    async function getHolidaysFromLocalStorage() {\n        //Try to get the holidays from the local storage, if does not exist, fetch them from the api\n        let holidaysLocal = JSON.parse(localStorage.getItem(\"holidays\"));\n        if (holidaysLocal === null || Object.keys(holidaysLocal).length === 0) {\n            let fetchedHolidays = await fetchHolidays();\n            localStorage.setItem(\"holidays\", JSON.stringify(fetchedHolidays));\n            return fetchedHolidays;\n        }\n        return holidaysLocal;\n    }\n\n    useEffect(() => {\n        async function localStorage() {\n            return getHolidaysFromLocalStorage();\n        }\n        localStorage().then(value => {\n            setHolidays(value);\n        });\n    }, []);\n\n    let title = `Feriados ${date}`;\n    return (\n        <div className={\"App m-2\"}>\n            <h1 className={\"font-bold text-4xl text-white p-8\"}>{title}</h1>\n            <Section title={\"Feriados proximos\"}\n                     holidays={holidays.filter(filterUpcomingHoliday)}/>\n            <Section title={title}\n                     holidays={holidays}/>\n            <div className={\"text-white sticky bottom-2 bg-purple-900 p-2 my-auto\"}>\n                Built by <a className={\"text-yellow-500\"} href=\"https://www.github.com/tomastoloza\">@tomastoloza</a>,\n                using <a className={\"text-yellow-500\"}\n                         href=\"https://github.com/pjnovas/nolaborables\">NoLaborables API REST</a> made by <a\n                className={\"text-yellow-500\"}\n                href=\"https://github.com/pjnovas/\">@pjnovas</a>\n            </div>\n        </div>\n    );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}