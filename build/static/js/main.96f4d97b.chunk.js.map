{"version":3,"sources":["components/Holiday.js","App.js","reportWebVitals.js","index.js"],"names":["Holiday","holiday","className","motivo","dia","mes","App","useState","holidays","setHolidays","date","Date","getFullYear","fetchHolidays","a","fetch","api","console","log","status","json","response","holidaysLocal","JSON","parse","localStorage","getItem","length","fetchedHolidays","setItem","stringify","useEffect","getHolidaysFromLocalStorage","then","value","filter","now","today","getDate","getMonth","filterUpcomingHoliday","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAWeA,EATC,SAACC,GACb,OACI,sBAAKC,UAAW,0DAAhB,UACI,4BAAID,EAAQA,QAAQE,SACpB,8BAAIF,EAAQA,QAAQG,IAApB,IAA0BH,EAAQA,QAAQI,WC2DvCC,MA5Df,WACI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAO,IAAIC,MAAOC,cAClBC,EAAa,uCAAG,8BAAAC,EAAA,+EAEIC,MAAM,8CAAD,OAA+CL,IAFxD,cAERM,EAFQ,OAGdC,QAAQC,IAAIF,EAAIG,QAHF,SAISH,EAAII,OAJb,cAIRC,EAJQ,yBAKPA,GALO,kCAOdJ,QAAQC,IAAR,MAPc,0DAAH,qDAHR,4CAuBX,8BAAAJ,EAAA,yDAGiC,KADzBQ,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,cAClCC,OAHtB,uBAIYC,EAAkBf,IACtBY,aAAaI,QAAQ,WAAYN,KAAKO,UAAUF,IALxD,kBAMeA,GANf,gCAQWN,GARX,4CAvBW,sBAuCX,OALAS,qBAAU,YAlCC,2CAmCPC,GAA8BC,MAAK,SAAAC,GAAK,OAAIzB,EAAYyB,QACzD,IAIC,sBAAKhC,UAAW,UAAhB,UACI,qBAAIA,UAAW,oCAAf,sBAA8DQ,KAC9D,sBAAKR,UAAW,mCAAhB,UACI,sBAAKA,UAAW,wDAAhB,UACI,mDAAsBQ,KACrBF,GAAYA,EAAS2B,QAAO,SAAAlC,GAAO,OA/BpD,SAA+BA,GAC3B,IAAMmC,EAAM,IAAIzB,KACV0B,EACGD,EAAIE,UADPD,EAEKD,EAAIG,WAAa,EAE5B,OAAOtC,EAAQI,MAAQgC,GAAepC,EAAQG,IAAMiC,GAAapC,EAAQI,IAAMgC,EAyB3BG,CAAsBvC,MAAUwC,KAAI,SAAAxC,GAAO,OAAI,cAAC,EAAD,CACnFA,QAASA,UAEjB,sBAAKC,UAAW,iDAAhB,UACI,0CAAaQ,KACZF,GAAYA,EAASiC,KAAI,SAAAxC,GAAO,OAAI,cAAC,EAAD,CACjCA,QAASA,iBC5ClByC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.96f4d97b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Holiday = (holiday) => {\n    return (\n        <div className={\"bg-purple-500 m-2 p-4 shadow-md shadow-inner rounded-lg\"}>\n            <p>{holiday.holiday.motivo}</p>\n            <p>{holiday.holiday.dia}/{holiday.holiday.mes}</p>\n        </div>\n    );\n};\n\nexport default Holiday;\n","import './App.css';\nimport './index.css';\nimport {useEffect, useState} from \"react\";\nimport Holiday from \"./components/Holiday\";\n\nfunction App() {\n    const [holidays, setHolidays] = useState([]);\n    const date = new Date().getFullYear()\n    const fetchHolidays = async () => {\n        try {\n            const api = await fetch(`http://nolaborables.com.ar/api/v2/feriados/${date}`);\n            console.log(api.status)\n            const response = await api.json();\n            return response;\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    function filterUpcomingHoliday(holiday) {\n        const now = new Date()\n        const today = {\n            day: now.getDate(),\n            month: now.getMonth() + 1\n        };\n        return holiday.mes === today.month && holiday.dia > today.day || holiday.mes > today.month;\n    }\n\n    async function getHolidaysFromLocalStorage() {\n        //Try to get the holidays from the local storage, if does not exist, fetch them from the api\n        let holidaysLocal = JSON.parse(localStorage.getItem(\"holidays\"));\n        if (holidaysLocal.length === 0) {\n            let fetchedHolidays = fetchHolidays();\n            localStorage.setItem(\"holidays\", JSON.stringify(fetchedHolidays))\n            return fetchedHolidays;\n        }\n        return holidaysLocal;\n    }\n\n    useEffect(() => {\n        getHolidaysFromLocalStorage().then(value => setHolidays(value));\n    }, []);\n\n\n    return (\n        <div className={\"App m-2\"}>\n            <h1 className={\"font-bold text-4xl text-white p-8\"}>Feriados {date}</h1>\n            <div className={\"text-white font-bold grid-cols-1\"}>\n                <div className={\"bg-purple-600 w-1/3 p-2 rounded-lg h-full m-4 mx-auto\"}>\n                    <p>Proximos feriados {date}</p>\n                    {holidays && holidays.filter(holiday => filterUpcomingHoliday(holiday)).map(holiday => <Holiday\n                        holiday={holiday}/>)}\n                </div>\n                <div className={\"bg-purple-600 w-1/3 p-2 rounded-lg m-4 mx-auto\"}>\n                    <p>Feriados {date}</p>\n                    {holidays && holidays.map(holiday => <Holiday\n                        holiday={holiday}/>)}\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}